// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GSIM Renders itself without error and only once 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GSIM
    endpoint="http://localhost:9090/"
    languageCode="en"
    producer="GSIM"
    route="/home/gsim/"
    user="Test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridColumn
          width={2}
        >
          <Menu
            fluid={true}
            vertical={true}
          >
            <MenuItem
              header={true}
            >
              GSIM domains
              <Label
                color="teal"
                size="large"
              >
                <Icon
                  as="i"
                  fitted={true}
                  loading={true}
                  name="spinner"
                />
              </Label>
            </MenuItem>
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              icon="search"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              onSearchChange={[Function]}
              openOnFocus={true}
              placeholder="Search..."
              renderLabel={[Function]}
              scrolling={true}
              search={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              value=""
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>
          </Menu>
        </GridColumn>,
        <GridColumn
          width={14}
        >
          <Switch />
        </GridColumn>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Menu
            fluid={true}
            vertical={true}
          >
            <MenuItem
              header={true}
            >
              GSIM domains
              <Label
                color="teal"
                size="large"
              >
                <Icon
                  as="i"
                  fitted={true}
                  loading={true}
                  name="spinner"
                />
              </Label>
            </MenuItem>
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              icon="search"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              onSearchChange={[Function]}
              openOnFocus={true}
              placeholder="Search..."
              renderLabel={[Function]}
              scrolling={true}
              search={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              value=""
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>
          </Menu>,
          "width": 2,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <MenuItem
                header={true}
              >
                GSIM domains
                <Label
                  color="teal"
                  size="large"
                >
                  <Icon
                    as="i"
                    fitted={true}
                    loading={true}
                    name="spinner"
                  />
                </Label>
              </MenuItem>,
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="search"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                onSearchChange={[Function]}
                openOnFocus={true}
                placeholder="Search..."
                renderLabel={[Function]}
                scrolling={true}
                search={true}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                value=""
                wrapSelection={true}
              >
                <DropdownMenu />
              </Dropdown>,
            ],
            "fluid": true,
            "vertical": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "GSIM domains",
                  <Label
                    color="teal"
                    size="large"
                  >
                    <Icon
                      as="i"
                      fitted={true}
                      loading={true}
                      name="spinner"
                    />
                  </Label>,
                ],
                "header": true,
              },
              "ref": null,
              "rendered": Array [
                "GSIM domains",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Icon
                      as="i"
                      fitted={true}
                      loading={true}
                      name="spinner"
                    />,
                    "color": "teal",
                    "size": "large",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "fitted": true,
                      "loading": true,
                      "name": "spinner",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "additionLabel": "Add ",
                "additionPosition": "top",
                "children": <DropdownMenu />,
                "closeOnBlur": true,
                "deburr": false,
                "icon": "search",
                "item": true,
                "minCharacters": 1,
                "noResultsMessage": "No results found.",
                "onSearchChange": [Function],
                "openOnFocus": true,
                "placeholder": "Search...",
                "renderLabel": [Function],
                "scrolling": true,
                "search": true,
                "searchInput": "text",
                "selectOnBlur": true,
                "selectOnNavigation": true,
                "value": "",
                "wrapSelection": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    false,
                    false,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  false,
                  false,
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Switch />,
          "width": 14,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              false,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
            false,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridColumn
            width={2}
          >
            <Menu
              fluid={true}
              vertical={true}
            >
              <MenuItem
                header={true}
              >
                GSIM domains
                <Label
                  color="teal"
                  size="large"
                >
                  <Icon
                    as="i"
                    fitted={true}
                    loading={true}
                    name="spinner"
                  />
                </Label>
              </MenuItem>
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="search"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                onSearchChange={[Function]}
                openOnFocus={true}
                placeholder="Search..."
                renderLabel={[Function]}
                scrolling={true}
                search={true}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                value=""
                wrapSelection={true}
              >
                <DropdownMenu />
              </Dropdown>
            </Menu>
          </GridColumn>,
          <GridColumn
            width={14}
          >
            <Switch />
          </GridColumn>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Menu
              fluid={true}
              vertical={true}
            >
              <MenuItem
                header={true}
              >
                GSIM domains
                <Label
                  color="teal"
                  size="large"
                >
                  <Icon
                    as="i"
                    fitted={true}
                    loading={true}
                    name="spinner"
                  />
                </Label>
              </MenuItem>
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="search"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                onSearchChange={[Function]}
                openOnFocus={true}
                placeholder="Search..."
                renderLabel={[Function]}
                scrolling={true}
                search={true}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                value=""
                wrapSelection={true}
              >
                <DropdownMenu />
              </Dropdown>
            </Menu>,
            "width": 2,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <MenuItem
                  header={true}
                >
                  GSIM domains
                  <Label
                    color="teal"
                    size="large"
                  >
                    <Icon
                      as="i"
                      fitted={true}
                      loading={true}
                      name="spinner"
                    />
                  </Label>
                </MenuItem>,
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  closeOnBlur={true}
                  deburr={false}
                  icon="search"
                  item={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  onSearchChange={[Function]}
                  openOnFocus={true}
                  placeholder="Search..."
                  renderLabel={[Function]}
                  scrolling={true}
                  search={true}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  value=""
                  wrapSelection={true}
                >
                  <DropdownMenu />
                </Dropdown>,
              ],
              "fluid": true,
              "vertical": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "GSIM domains",
                    <Label
                      color="teal"
                      size="large"
                    >
                      <Icon
                        as="i"
                        fitted={true}
                        loading={true}
                        name="spinner"
                      />
                    </Label>,
                  ],
                  "header": true,
                },
                "ref": null,
                "rendered": Array [
                  "GSIM domains",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Icon
                        as="i"
                        fitted={true}
                        loading={true}
                        name="spinner"
                      />,
                      "color": "teal",
                      "size": "large",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "fitted": true,
                        "loading": true,
                        "name": "spinner",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "additionLabel": "Add ",
                  "additionPosition": "top",
                  "children": <DropdownMenu />,
                  "closeOnBlur": true,
                  "deburr": false,
                  "icon": "search",
                  "item": true,
                  "minCharacters": 1,
                  "noResultsMessage": "No results found.",
                  "onSearchChange": [Function],
                  "openOnFocus": true,
                  "placeholder": "Search...",
                  "renderLabel": [Function],
                  "scrolling": true,
                  "search": true,
                  "searchInput": "text",
                  "selectOnBlur": true,
                  "selectOnNavigation": true,
                  "value": "",
                  "wrapSelection": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      false,
                      false,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    false,
                    false,
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Switch />,
            "width": 14,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                false,
                false,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              false,
              false,
              false,
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
