// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Renders itself without error and only once 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    lds="http://localhost:9090/"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "basic": true,
      "children": <Container
        fluid={true}
        style={
          Object {
            "marginTop": "5em",
          }
        }
      >
        <Login
          handleChange={[Function]}
          handleLogin={[Function]}
          languageCode="en"
          loggedIn={false}
          password=""
          user=""
        />
      </Container>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Login
          handleChange={[Function]}
          handleLogin={[Function]}
          languageCode="en"
          loggedIn={false}
          password=""
          user=""
        />,
        "fluid": true,
        "style": Object {
          "marginTop": "5em",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "handleChange": [Function],
          "handleLogin": [Function],
          "languageCode": "en",
          "loggedIn": false,
          "password": "",
          "user": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "basic": true,
        "children": <Container
          fluid={true}
          style={
            Object {
              "marginTop": "5em",
            }
          }
        >
          <Login
            handleChange={[Function]}
            handleLogin={[Function]}
            languageCode="en"
            loggedIn={false}
            password=""
            user=""
          />
        </Container>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Login
            handleChange={[Function]}
            handleLogin={[Function]}
            languageCode="en"
            loggedIn={false}
            password=""
            user=""
          />,
          "fluid": true,
          "style": Object {
            "marginTop": "5em",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleChange": [Function],
            "handleLogin": [Function],
            "languageCode": "en",
            "loggedIn": false,
            "password": "",
            "user": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
